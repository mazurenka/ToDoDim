[{"D:\\programming\\ToDoListDimych\\todolist\\src\\Task.tsx":"1","D:\\programming\\ToDoListDimych\\todolist\\src\\api\\todolists-api.ts":"2","D:\\programming\\ToDoListDimych\\todolist\\src\\state\\todolists-reducer.ts":"3","D:\\programming\\ToDoListDimych\\todolist\\src\\state\\tasks-reducer.ts":"4","D:\\programming\\ToDoListDimych\\todolist\\src\\index.tsx":"5","D:\\programming\\ToDoListDimych\\todolist\\src\\Todolist.tsx":"6"},{"size":1729,"mtime":1596076630000,"results":"7","hashOfConfig":"8"},{"size":2512,"mtime":1640622467702,"results":"9","hashOfConfig":"8"},{"size":3475,"mtime":1640626601855,"results":"10","hashOfConfig":"8"},{"size":6184,"mtime":1641205724553,"results":"11","hashOfConfig":"8"},{"size":693,"mtime":1641203598208,"results":"12","hashOfConfig":"8"},{"size":3750,"mtime":1641204407124,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"gxrur4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\programming\\ToDoListDimych\\todolist\\src\\Task.tsx",["27","28","29"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from './api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\programming\\ToDoListDimych\\todolist\\src\\api\\todolists-api.ts",[],"D:\\programming\\ToDoListDimych\\todolist\\src\\state\\todolists-reducer.ts",[],"D:\\programming\\ToDoListDimych\\todolist\\src\\state\\tasks-reducer.ts",["30"],"D:\\programming\\ToDoListDimych\\todolist\\src\\index.tsx",["31"],"D:\\programming\\ToDoListDimych\\todolist\\src\\Todolist.tsx",["32","33","34","35","36","37"],{"ruleId":"38","severity":1,"message":"39","line":15,"column":97,"nodeType":"40","endLine":15,"endColumn":130,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"39","line":20,"column":8,"nodeType":"40","endLine":20,"endColumn":41,"suggestions":"42"},{"ruleId":"38","severity":1,"message":"39","line":24,"column":8,"nodeType":"40","endLine":24,"endColumn":41,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":5,"nodeType":"46","messageId":"47","endLine":6,"endColumn":19},{"ruleId":"44","severity":1,"message":"48","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":11},{"ruleId":"38","severity":1,"message":"49","line":34,"column":8,"nodeType":"40","endLine":34,"endColumn":10,"suggestions":"50"},{"ruleId":"38","severity":1,"message":"39","line":38,"column":8,"nodeType":"40","endLine":38,"endColumn":33,"suggestions":"51"},{"ruleId":"38","severity":1,"message":"39","line":45,"column":8,"nodeType":"40","endLine":45,"endColumn":45,"suggestions":"52"},{"ruleId":"38","severity":1,"message":"39","line":47,"column":86,"nodeType":"40","endLine":47,"endColumn":116,"suggestions":"53"},{"ruleId":"38","severity":1,"message":"39","line":48,"column":92,"nodeType":"40","endLine":48,"endColumn":122,"suggestions":"54"},{"ruleId":"38","severity":1,"message":"39","line":49,"column":98,"nodeType":"40","endLine":49,"endColumn":128,"suggestions":"55"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["56"],["57"],["58"],"@typescript-eslint/no-unused-vars","'setTodolistsAC' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["59"],["60"],["61"],["62"],["63"],["64"],{"desc":"65","fix":"66"},{"desc":"65","fix":"67"},{"desc":"65","fix":"68"},{"desc":"69","fix":"70"},{"desc":"65","fix":"71"},{"desc":"65","fix":"72"},{"desc":"65","fix":"73"},{"desc":"65","fix":"74"},{"desc":"65","fix":"75"},"Update the dependencies array to be: [props]",{"range":"76","text":"77"},{"range":"78","text":"77"},{"range":"79","text":"77"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"80","text":"81"},{"range":"82","text":"77"},{"range":"83","text":"77"},{"range":"84","text":"77"},{"range":"85","text":"77"},{"range":"86","text":"77"},[721,754],"[props]",[1027,1060],[1217,1250],[1289,1291],"[dispatch, props.id]",[1397,1422],[1635,1672],[1762,1792],[1886,1916],[2016,2046]]