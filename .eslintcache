[{"D:\\programming\\ToDoListDimych\\todolist\\src\\app\\App.tsx":"1","D:\\programming\\ToDoListDimych\\todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"2","D:\\programming\\ToDoListDimych\\todolist\\src\\api\\todolists-api.ts":"3","D:\\programming\\ToDoListDimych\\todolist\\src\\index.tsx":"4","D:\\programming\\ToDoListDimych\\todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"5","D:\\programming\\ToDoListDimych\\todolist\\src\\app\\app-reducer.ts":"6","D:\\programming\\ToDoListDimych\\todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"7"},{"size":1313,"mtime":1641311375657,"results":"8","hashOfConfig":"9"},{"size":952,"mtime":1641293568834,"results":"10","hashOfConfig":"9"},{"size":2582,"mtime":1641294322805,"results":"11","hashOfConfig":"9"},{"size":643,"mtime":1641293568642,"results":"12","hashOfConfig":"9"},{"size":1773,"mtime":1641293568960,"results":"13","hashOfConfig":"9"},{"size":1050,"mtime":1641311683174,"results":"14","hashOfConfig":"9"},{"size":3838,"mtime":1641293568944,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gxrur4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\programming\\ToDoListDimych\\todolist\\src\\app\\App.tsx",[],"D:\\programming\\ToDoListDimych\\todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\programming\\ToDoListDimych\\todolist\\src\\api\\todolists-api.ts",[],"D:\\programming\\ToDoListDimych\\todolist\\src\\index.tsx",[],["32","33"],"D:\\programming\\ToDoListDimych\\todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["34","35","36"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\programming\\ToDoListDimych\\todolist\\src\\app\\app-reducer.ts",["37"],"D:\\programming\\ToDoListDimych\\todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["38","39","40","41","42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":15,"column":97,"nodeType":"50","endLine":15,"endColumn":130,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"49","line":20,"column":8,"nodeType":"50","endLine":20,"endColumn":41,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":24,"column":8,"nodeType":"50","endLine":24,"endColumn":41,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":7,"nodeType":"56","messageId":"57","endLine":1,"endColumn":37},{"ruleId":"48","severity":1,"message":"58","line":34,"column":8,"nodeType":"50","endLine":34,"endColumn":10,"suggestions":"59"},{"ruleId":"48","severity":1,"message":"49","line":38,"column":8,"nodeType":"50","endLine":38,"endColumn":33,"suggestions":"60"},{"ruleId":"48","severity":1,"message":"49","line":45,"column":8,"nodeType":"50","endLine":45,"endColumn":45,"suggestions":"61"},{"ruleId":"48","severity":1,"message":"49","line":47,"column":86,"nodeType":"50","endLine":47,"endColumn":116,"suggestions":"62"},{"ruleId":"48","severity":1,"message":"49","line":48,"column":92,"nodeType":"50","endLine":48,"endColumn":122,"suggestions":"63"},{"ruleId":"48","severity":1,"message":"49","line":49,"column":98,"nodeType":"50","endLine":49,"endColumn":128,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["67"],["68"],["69"],"@typescript-eslint/no-unused-vars","'initialState' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["70"],["71"],["72"],["73"],["74"],["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"76","fix":"78"},{"desc":"76","fix":"79"},{"desc":"80","fix":"81"},{"desc":"76","fix":"82"},{"desc":"76","fix":"83"},{"desc":"76","fix":"84"},{"desc":"76","fix":"85"},{"desc":"76","fix":"86"},"Update the dependencies array to be: [props]",{"range":"87","text":"88"},{"range":"89","text":"88"},{"range":"90","text":"88"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"91","text":"92"},{"range":"93","text":"88"},{"range":"94","text":"88"},{"range":"95","text":"88"},{"range":"96","text":"88"},{"range":"97","text":"88"},[765,798],"[props]",[1071,1104],[1261,1294],[1377,1379],"[dispatch, props.id]",[1485,1510],[1723,1760],[1850,1880],[1974,2004],[2104,2134]]